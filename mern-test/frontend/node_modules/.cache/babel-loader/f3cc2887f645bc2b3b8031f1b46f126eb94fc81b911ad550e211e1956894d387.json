{"ast":null,"code":"import http from \"../http-common\";\nclass RestaurantDataService {\n  getAll() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return http.get(`restaurants?page=${page}`);\n  }\n  get(id) {\n    return http.get(`/restaurant?id=${id}`);\n  }\n  find(query) {\n    let by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"name\";\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    return http.get(`restaurants?${by}=${query}&page=${page}`);\n  }\n  createReview(data) {\n    return http.post(\"/review-new\", data);\n  }\n  updateReview(data) {\n    return http.put(\"/review-edit\", data);\n  }\n  deleteReview(id, userId) {\n    return http.delete(`/review-delete?id=${id}`, {\n      data: {\n        user_id: userId\n      }\n    });\n  }\n  getCuisines(id) {\n    return http.get(`/cuisines`);\n  }\n}\nexport default new RestaurantDataService();","map":{"version":3,"names":["http","RestaurantDataService","getAll","page","get","id","find","query","by","createReview","data","post","updateReview","put","deleteReview","userId","delete","user_id","getCuisines"],"sources":["C:/Users/noahr/source/VSCoderepos/MernTest/mern-test/frontend/src/services/restaurant.js"],"sourcesContent":["import http from \"../http-common\";\r\n\r\nclass RestaurantDataService {\r\n    getAll(page = 0) {\r\n      return http.get(`restaurants?page=${page}`);\r\n    }\r\n  \r\n    get(id) {\r\n      return http.get(`/restaurant?id=${id}`);\r\n    }\r\n  \r\n    find(query, by = \"name\", page = 0) {\r\n      return http.get(`restaurants?${by}=${query}&page=${page}`);\r\n    } \r\n  \r\n    createReview(data) {\r\n      return http.post(\"/review-new\", data);\r\n    }\r\n  \r\n    updateReview(data) {\r\n      return http.put(\"/review-edit\", data);\r\n    }\r\n  \r\n    deleteReview(id, userId) {\r\n      return http.delete(`/review-delete?id=${id}`, {data:{user_id: userId}});\r\n    }\r\n  \r\n    getCuisines(id) {\r\n      return http.get(`/cuisines`);\r\n    }\r\n  \r\n  }\r\n  \r\n  export default new RestaurantDataService();"],"mappings":"AAAA,OAAOA,IAAI,MAAM,gBAAgB;AAEjC,MAAMC,qBAAqB,CAAC;EACxBC,MAAM,GAAW;IAAA,IAAVC,IAAI,uEAAG,CAAC;IACb,OAAOH,IAAI,CAACI,GAAG,CAAE,oBAAmBD,IAAK,EAAC,CAAC;EAC7C;EAEAC,GAAG,CAACC,EAAE,EAAE;IACN,OAAOL,IAAI,CAACI,GAAG,CAAE,kBAAiBC,EAAG,EAAC,CAAC;EACzC;EAEAC,IAAI,CAACC,KAAK,EAAyB;IAAA,IAAvBC,EAAE,uEAAG,MAAM;IAAA,IAAEL,IAAI,uEAAG,CAAC;IAC/B,OAAOH,IAAI,CAACI,GAAG,CAAE,eAAcI,EAAG,IAAGD,KAAM,SAAQJ,IAAK,EAAC,CAAC;EAC5D;EAEAM,YAAY,CAACC,IAAI,EAAE;IACjB,OAAOV,IAAI,CAACW,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;EACvC;EAEAE,YAAY,CAACF,IAAI,EAAE;IACjB,OAAOV,IAAI,CAACa,GAAG,CAAC,cAAc,EAAEH,IAAI,CAAC;EACvC;EAEAI,YAAY,CAACT,EAAE,EAAEU,MAAM,EAAE;IACvB,OAAOf,IAAI,CAACgB,MAAM,CAAE,qBAAoBX,EAAG,EAAC,EAAE;MAACK,IAAI,EAAC;QAACO,OAAO,EAAEF;MAAM;IAAC,CAAC,CAAC;EACzE;EAEAG,WAAW,CAACb,EAAE,EAAE;IACd,OAAOL,IAAI,CAACI,GAAG,CAAE,WAAU,CAAC;EAC9B;AAEF;AAEA,eAAe,IAAIH,qBAAqB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}